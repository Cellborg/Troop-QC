name: Cellborg QC containers build & deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ opened, reopened, edited ]
  workflow_dispatch:
    inputs:
      environ:
        description: 'environment'
        required: false
    
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'
    - name: Build, Tag, and Push the QC/py
      id: build-qc-py
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: cellborg-beta-qc_py
        IMAGE_TAG: 'latest'
      run: |
        cd QCPoller
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG      
    - name: Build, Tag, and Push the QC/py-qcrunner
      id: build-qc-py-qcrunner
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: cellborg-beta-qc_pyrunner
        IMAGE_TAG: 'latest'
      run: |
        cd QCApi
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
